import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { PayrollService } from '../../services/Payroll.service';
import { ActivatedRoute } from '@angular/router';
@Component({
  selector: 'app-employee-personal-details',
  templateUrl: './employee-personal-details.component.html',
  styleUrls: ['./employee-personal-details.component.css'],
  styles: [`
  @media only screen and (max-width: 768px) {
      .text-dowwn {
         color:green;
         margin-left:10px;
         margin-top:21px;
         float:right;
      }
  }
  @media only screen and (min-width: 1020px) {
    .text-dowwn {
       color:blue;
       float:right;
    }
}
 
`]
})

export class EmployeePersonalDetailsComponent implements OnInit {
  employeeid
  employeeDetail
  identifierId
  FirstName
  empLastName
  empNicNumber
  gender;
  phonenumber
  empAddress
  empPostalCode
  empCity
  t
  totalSalery
  empEmail
  empStreet
  categoryTypeid
  empDateEmployee
  empEtfNo
  empEpfNo
  empBasicSalery
  empTotalSalery
  userForm
  category = [] = []
  empIdentifier
  firstName
  employeeDate
  basicSalery
  empEtf
  empEpf
  female
  jobName
  employeeAllowanceDetails;
  employeeDeductionsDetails;
  totalAllowances = 0;
  totalDeductions = 0;
  monthlyTotalAllowances = 0;
  monthlyTotalDeductions = 0;
  MonthlyAllowanceDetails;
  MonthlyDeductionsDetails;


  constructor(
    private route: ActivatedRoute,
    private wishPayrollService: PayrollService,
  ) {

  }

  ngOnInit() {
    let self = this
    let desc = this.route.snapshot.paramMap.get('identifierId');
    this.employeeid = desc;
    this.employeeid=("0000"+this.employeeid).slice(-4);
    let employeeDetail = {
      id: parseInt(this.employeeid)
    }

    this.wishPayrollService.getEmployeePersonalDetail(employeeDetail).then(response => {


      this.employeeDetail = response.json().data[0]

      this.FirstName = this.employeeDetail.FirstName;
      this.empLastName = this.employeeDetail.empLastName
      this.empNicNumber = this.employeeDetail.empNicNumber
      this.gender = this.employeeDetail.gender
      this.phonenumber = this.employeeDetail.phonenumber
      this.empAddress = this.employeeDetail.empAddress
      this.empPostalCode = this.employeeDetail.empPostalCode
      this.empCity = this.employeeDetail.empCity
      this.empStreet = this.employeeDetail.empStreet
      this.categoryTypeid = this.employeeDetail.categoryTypeid
      this.empDateEmployee = this.employeeDetail.empDateEmployee
      this.empEtfNo = this.employeeDetail.empEtfNo
      this.empEpfNo = this.employeeDetail.empEpfNo
      this.empBasicSalery = this.employeeDetail.empBasicSalery
      this.empTotalSalery = this.employeeDetail.empTotalSalery
      this.identifierId = this.employeeDetail.identifierId
      this.empEmail = this.employeeDetail.empEmail

      this.wishPayrollService.getEmployeeCategory(this.employeeDetail).then(response => {
        this.category = response.json().data;
        self.jobName = this.category.find((item: any) => item.id == this.categoryTypeid).name;
      })

    })
    this.wishPayrollService.getPreAllowancesForView().then(response => {
      this.employeeAllowanceDetails = response.json().data;
      this.wishPayrollService.getDeductionsForView().then(response => {
        this.employeeDeductionsDetails = response.json().data;
        this.wishPayrollService.getMonthAllowanceForPersional(localStorage.getItem('parollRunDate')).then(response => {
          this.MonthlyAllowanceDetails = response.json().data;
          this.wishPayrollService.getMonthDeductionsForPersional(localStorage.getItem('parollRunDate')).then(response => {
            this.MonthlyDeductionsDetails = response.json().data;
            if (this.employeeAllowanceDetails.length != 0 || this.employeeDeductionsDetails.length != 0) {
              this.viewSalaryDetails();
            }
          });
        });
      });
    });
  }
  viewSalaryDetails() {
    for (var i = 0; i < this.employeeAllowanceDetails.length; i++) {
      if (this.employeeAllowanceDetails[i].employeeid == this.identifierId) {
        this.totalAllowances = this.employeeAllowanceDetails[i].amount;
      }
    }
    for (var i = 0; i < this.employeeDeductionsDetails.length; i++) {
      if (this.employeeDeductionsDetails[i].employeeid == this.identifierId) {
        this.totalDeductions = this.employeeDeductionsDetails[i].amount
      }
    }
    for (var i = 0; i < this.MonthlyAllowanceDetails.length; i++) {
      if (this.MonthlyAllowanceDetails[i].employeeid == this.identifierId) {
        this.monthlyTotalAllowances = this.MonthlyAllowanceDetails[i].amount;
      }
    }
    for (var i = 0; i < this.MonthlyDeductionsDetails.length; i++) {
      if (this.MonthlyDeductionsDetails[i].employeeid == this.identifierId) {
        this.monthlyTotalDeductions = this.MonthlyDeductionsDetails[i].amount
      }
    }
  }
}
